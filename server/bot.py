from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from database import db
from config import config
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n"
        "–Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
    )
    await help_command(update, context)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "üõ† –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/add <–Ω–∏–∫–Ω–µ–π–º> - –î–æ–±–∞–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º\n"
        "/del <–Ω–∏–∫–Ω–µ–π–º> - –£–¥–∞–ª–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º\n"
        "/list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∏–∫–Ω–µ–π–º—ã\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    await update.message.reply_text(help_text)

async def add_nick(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º: /add <–Ω–∏–∫–Ω–µ–π–º>")
        return

    nickname = " ".join(context.args)
    if db.add_nickname(nickname, source="telegram"):
        await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {nickname}")
    else:
        await update.message.reply_text(f"‚ö† –û—à–∏–±–∫–∞: –Ω–∏–∫–Ω–µ–π–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

async def del_nick(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º: /del <–Ω–∏–∫–Ω–µ–π–º>")
        return

    nickname = " ".join(context.args)
    if db.remove_nickname(nickname):
        await update.message.reply_text(f"üóë –£–¥–∞–ª–µ–Ω: {nickname}")
    else:
        await update.message.reply_text(f"‚ö† –û—à–∏–±–∫–∞: –Ω–∏–∫–Ω–µ–π–º –Ω–µ –Ω–∞–π–¥–µ–Ω")

async def list_nicks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    nicks = db.get_all_nicknames()
    response = "üìã –°–ø–∏—Å–æ–∫ –Ω–∏–∫–Ω–µ–π–º–æ–≤:\n" + "\n".join([n['nickname'] for n in nicks]) if nicks else "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"
    await update.message.reply_text(response)

def run_bot():
    app = Application.builder().token(config.TELEGRAM['BOT_TOKEN']).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("add", add_nick))
    app.add_handler(CommandHandler("del", del_nick))  # –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
    app.add_handler(CommandHandler("list", list_nicks))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    run_bot()
